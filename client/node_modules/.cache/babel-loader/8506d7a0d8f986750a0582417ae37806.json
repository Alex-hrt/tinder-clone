{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\School\\\\WebTech\\\\Fullstack\\\\tinder-clone\\\\client\\\\src\\\\components\\\\ChatDisplay.jsx\";\nimport axios from \"axios\";\nimport Chat from \"./Chat\";\nimport ChatInput from \"./ChatInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatDisplay = _ref => {\n  let {\n    user,\n    clickedUser\n  } = _ref;\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n\n  const getUsersMessages = async () => {\n    const response = await axios.get(\"http://localhost:8000/messages\", {\n      params: {\n        userId: userId,\n        correspondingUserId: clickedUserId\n      }\n    });\n    setUserMessages(response.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = ChatDisplay;\nexport default ChatDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"sources":["D:/Work/School/WebTech/Fullstack/tinder-clone/client/src/components/ChatDisplay.jsx"],"names":["axios","Chat","ChatInput","ChatDisplay","user","clickedUser","userId","user_id","clickedUserId","getUsersMessages","response","get","params","correspondingUserId","setUserMessages","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,WAAW,GAAG,QAA2B;AAAA,MAA1B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA0B;AAC3C,QAAMC,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,OAArB;AACA,QAAMC,aAAa,GAAGH,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEE,OAAnC;;AAGA,QAAME,gBAAgB,GAAG,YAAY;AACjC,UAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,gCAAV,EAA4C;AAC/DC,MAAAA,MAAM,EAAE;AAACN,QAAAA,MAAM,EAAEA,MAAT;AAAiBO,QAAAA,mBAAmB,EAAEL;AAAtC;AADuD,KAA5C,CAAvB;AAGAM,IAAAA,eAAe,CAACJ,QAAQ,CAACK,IAAV,CAAf;AACH,GALD;;AAQA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CAnBD;;KAAMZ,W;AAqBN,eAAeA,WAAf","sourcesContent":["import axios from \"axios\";\r\nimport Chat from \"./Chat\";\r\nimport ChatInput from \"./ChatInput\";\r\n\r\nconst ChatDisplay = ({ user, clickedUser }) => {\r\n    const userId = user?.user_id\r\n    const clickedUserId = clickedUser?.user_id\r\n\r\n\r\n    const getUsersMessages = async () => {\r\n        const response = await axios.get(\"http://localhost:8000/messages\", {\r\n            params: {userId: userId, correspondingUserId: clickedUserId }\r\n        })\r\n        setUserMessages(response.data)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Chat />\r\n            <ChatInput />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatDisplay"]},"metadata":{},"sourceType":"module"}