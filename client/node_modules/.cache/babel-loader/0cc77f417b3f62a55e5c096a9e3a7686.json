{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\School\\\\WebTech\\\\Fullstack\\\\tinder-clone\\\\client\\\\src\\\\components\\\\ChatDisplay.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport Chat from \"./Chat\";\nimport ChatInput from \"./ChatInput\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatDisplay = _ref => {\n  _s();\n\n  let {\n    user,\n    clickedUser\n  } = _ref;\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [usersMessages, setUsersMessages] = useState(null);\n  const [clickedUsersMessages, setClickedUsersMessages] = useState(null);\n\n  const getUsersMessages = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/messages\", {\n        params: {\n          userId: userId,\n          correspondingUserId: clickedUserId\n        }\n      });\n      setUsersMessages(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getMessages;\n  }, [usersMessages, clickedUsersMessages]);\n  const messages = [];\n  usersMessages === null || usersMessages === void 0 ? void 0 : usersMessages.forEach(message => {\n    const formattedMessage = {};\n    formattedMessage[\"name\"] = user === null || user === void 0 ? void 0 : user.first_name;\n    formattedMessage[\"img\"] = user === null || user === void 0 ? void 0 : user.url;\n    formattedMessage[\"message\"] = message.messages;\n    formattedMessage[\"timestamp\"] = message.timestamp;\n    messages.push(formattedMessage);\n  });\n  console.log(\"usersMessages\", usersMessages);\n  console.log(\"formattedMessages\", messages);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatDisplay, \"lPn/xB/W2UmaOZWNrmwpg6m2xhU=\");\n\n_c = ChatDisplay;\nexport default ChatDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"sources":["D:/Work/School/WebTech/Fullstack/tinder-clone/client/src/components/ChatDisplay.jsx"],"names":["axios","Chat","ChatInput","useEffect","useState","ChatDisplay","user","clickedUser","userId","user_id","clickedUserId","usersMessages","setUsersMessages","clickedUsersMessages","setClickedUsersMessages","getUsersMessages","response","get","params","correspondingUserId","data","err","console","log","getMessages","messages","forEach","message","formattedMessage","first_name","url","timestamp","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAEA,MAAMC,WAAW,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA0B;AAC3C,QAAMC,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,OAArB;AACA,QAAMC,aAAa,GAAGH,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEE,OAAnC;AACA,QAAM,CAAEE,aAAF,EAAiBC,gBAAjB,IAAsCR,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAAES,oBAAF,EAAwBC,uBAAxB,IAAoDV,QAAQ,CAAC,IAAD,CAAlE;;AAEA,QAAMW,gBAAgB,GAAG,YAAY;AACjC,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,gCAAV,EAA4C;AAC/DC,QAAAA,MAAM,EAAE;AAACV,UAAAA,MAAM,EAAEA,MAAT;AAAiBW,UAAAA,mBAAmB,EAAET;AAAtC;AADuD,OAA5C,CAAvB;AAGAE,MAAAA,gBAAgB,CAACI,QAAQ,CAACI,IAAV,CAAhB;AACH,KALD,CAKE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GATD;;AAWAlB,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACb,aAAD,EAAgBE,oBAAhB,CAFM,CAAT;AAIA,QAAMY,QAAQ,GAAG,EAAjB;AAEAd,EAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEe,OAAf,CAAuBC,OAAO,IAAI;AAC9B,UAAMC,gBAAgB,GAAG,EAAzB;AACAA,IAAAA,gBAAgB,CAAC,MAAD,CAAhB,GAA2BtB,IAA3B,aAA2BA,IAA3B,uBAA2BA,IAAI,CAAEuB,UAAjC;AACAD,IAAAA,gBAAgB,CAAC,KAAD,CAAhB,GAA0BtB,IAA1B,aAA0BA,IAA1B,uBAA0BA,IAAI,CAAEwB,GAAhC;AACAF,IAAAA,gBAAgB,CAAC,SAAD,CAAhB,GAA8BD,OAAO,CAACF,QAAtC;AACAG,IAAAA,gBAAgB,CAAC,WAAD,CAAhB,GAAgCD,OAAO,CAACI,SAAxC;AACAN,IAAAA,QAAQ,CAACO,IAAT,CAAcJ,gBAAd;AACH,GAPD;AASAN,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BZ,aAA7B;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,QAAjC;AAEA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CAzCD;;GAAMpB,W;;KAAAA,W;AA2CN,eAAeA,WAAf","sourcesContent":["import axios from \"axios\";\r\nimport Chat from \"./Chat\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst ChatDisplay = ({ user, clickedUser }) => {\r\n    const userId = user?.user_id\r\n    const clickedUserId = clickedUser?.user_id\r\n    const [ usersMessages, setUsersMessages ] = useState(null)\r\n    const [ clickedUsersMessages, setClickedUsersMessages ] = useState(null)\r\n\r\n    const getUsersMessages = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:8000/messages\", {\r\n                params: {userId: userId, correspondingUserId: clickedUserId }\r\n            })\r\n            setUsersMessages(response.data)\r\n        } catch (err) {\r\n            console.log(err)\r\n        } \r\n    } \r\n\r\n    useEffect(() => {\r\n        getMessages\r\n    }, [usersMessages, clickedUsersMessages])\r\n\r\n    const messages = []\r\n\r\n    usersMessages?.forEach(message => {\r\n        const formattedMessage = {}\r\n        formattedMessage[\"name\"] = user?.first_name\r\n        formattedMessage[\"img\"] = user?.url\r\n        formattedMessage[\"message\"] = message.messages\r\n        formattedMessage[\"timestamp\"] = message.timestamp\r\n        messages.push(formattedMessage)\r\n    })\r\n\r\n    console.log(\"usersMessages\", usersMessages)\r\n    console.log(\"formattedMessages\", messages)\r\n\r\n    return (\r\n        <>\r\n            <Chat />\r\n            <ChatInput />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatDisplay"]},"metadata":{},"sourceType":"module"}